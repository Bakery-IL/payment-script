#!/usr/bin/env node

if (process.argv.length < 4) {
  console.log('usage: payments cycle backereiDB');
  process.exit(1);
}

const [, , cycle, fileName] = process.argv;

const backereiDB = require(fileName); // TODO load from home
if (!backereiDB || !backereiDB.payoutsByCycle) {
  console.log("backerei db isn't available");
  process.exit(1);
}

let cycleData;
if (cycle != 0) {
  cycleData = backereiDB.payoutsByCycle[cycle];
  if (!cycleData) {
    console.log('no backerei db for this cycle');
    process.exit(1);
  }

  if (!cycleData.finalBakerRewards) {
    console.log('db is not updated with final rewards for this cycle');
    process.exit(1);
  }
} else {
  cycleData = Objects.keys(backereiDB.payoutsByCycle)
    .map(Number)
    .sort((a, b) => b - a)
    .find();
}
const { delegators } = cycleData;

console.log(
  Object.keys(delegators)
    .map(d => `${d}=${delegators[d].finalRewards}`)
    .join('\n')
);
